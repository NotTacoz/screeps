var roleRepairer = {

    /** @param {Creep} creep **/
    run: function(creep) {

        if (creep.memory.repairer && creep.store[RESOURCE_ENERGY] == 0) {
            creep.memory.repairer = false;
            creep.say('ðŸ”„ harvest');
        }
        if (!creep.memory.repairer && creep.store.getFreeCapacity() == 0) {
            creep.memory.repairer = true;
            creep.say('ðŸ”¨ repair');
        }

        if (creep.memory.repairer) {
            var targets = creep.room.find(FIND_STRUCTURES, {filter: object => object.hits < (object.hitsMax/4)});
            targets.sort((a,b) => a.hits - b.hits);
            if(targets.length > 0) {
                if(creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {
                    creep.moveTo(targets[0]);}
                }
        } else {
            var sources = creep.room.find(FIND_SOURCES);
            if (creep.harvest(sources[1]) == ERR_NOT_IN_RANGE) {
                creep.moveTo(sources[1], { visualizePathStyle: { stroke: '#12b300' } });
            }
        }
    }
};

module.exports = roleRepairer;